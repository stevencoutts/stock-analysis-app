services:
  frontend:
    container_name: stock-frontend
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8082:80"
    volumes:
      - ./src:/app/src
      - ./public:/app/public
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=http://localhost:8081
    networks:
      - stock-network
    depends_on:
      - api

  api:
    container_name: stock-api
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8081:5000"
    volumes:
      - ./api:/app
    command: sh -c "npm install && npm start"
    environment:
      - NODE_ENV=production
      - DB_HOST=db
      - DB_PORT=5432
      - ALPHA_VANTAGE_API_KEY=9FC95PXLEUFUU9TJ
    networks:
      - stock-network
    depends_on:
      - db

  db:
    container_name: stock-db
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=stockdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - stock-network

networks:
  stock-network:
    driver: bridge

volumes:
  postgres_data: 